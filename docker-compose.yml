version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx-lb
    ports:
      - "8080:80"
    depends_on:
      - app
      - app2
      - app3
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
  app:
    build: .
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/psql
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
  
  app2:
    build: .
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/psql
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin

  app3:
    build: .
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/psql
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin

  db:
    image: postgres:latest
    container_name: log430db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: psql
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./Monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./Monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./Monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      
  redis:
  image: redis:7
  ports:
    - "6379:6379"

volumes:
  pgdata:
  grafana-storage:

networks:
  default:
    driver: bridge